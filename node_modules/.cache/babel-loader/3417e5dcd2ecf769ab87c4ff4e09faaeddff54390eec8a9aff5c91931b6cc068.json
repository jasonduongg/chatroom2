{"ast":null,"code":"var _jsxFileName = \"/Users/trinhduong/chatroom2/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { googleLogout, useGoogleLogin } from '@react-oauth/google';\nimport Chatroom from \"./components/Chatroom/Chatroom.tsx\";\nimport AdminPanel from \"./components/AdminPanel/AdminPanel.tsx\";\nimport UserPanel from \"./components/UserPanel/UserPanel.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [isAdmin, setAdmin] = useState(false);\n  const login = useGoogleLogin({\n    onSuccess: codeResponse => setUser(codeResponse),\n    onError: error => console.log('Login Failed:', error)\n  });\n  useEffect(() => {\n    if (user) {\n      fetch(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n          Accept: 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        setProfile(data);\n        addUserToDatabase(data);\n        checkAdminStatus(data);\n      }).catch(error => console.log(error));\n    }\n  }, [user]);\n  const checkAdminStatus = profile => {\n    const {\n      id,\n      email\n    } = profile;\n    fetch(`http://localhost:443/checkAdmin?customer_id=${id}&customer_email=${email}`).then(response => response.json()).then(data => {\n      console.log(data);\n      if (data.exists) {\n        setAdmin(true);\n      } else {\n        setAdmin(false);\n      }\n    }).catch(error => {\n      console.error('Failed to check admin status:', error);\n      setAdmin(false);\n    });\n  };\n  const addUserToDatabase = googleProfile => {\n    const userData = {\n      CUSTOMER_ID: googleProfile.id,\n      // Assuming CUSTOMER_ID is a string\n      CUSTOMER_EMAIL: googleProfile.email,\n      CUSTOMER_NAME: googleProfile.name\n    };\n    fetch('http://localhost:443/setUsers', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => console.log('User added successfully:', response)).catch(error => console.error('Failed to add user:', error));\n  };\n  const logOut = () => {\n    googleLogout();\n    setUser(null);\n    setProfile(null);\n  };\n  console.log(isAdmin);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"border-2 border-red-400 p-2 \",\n        onClick: logOut,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", profile.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(AdminPanel, {\n          user: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(UserPanel, {\n          user: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => login(),\n      children: \"Sign in with Google \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"IXjAod9OE71Gr1cRnHnFKhGzByY=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","googleLogout","useGoogleLogin","Chatroom","AdminPanel","UserPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","user","setUser","profile","setProfile","isAdmin","setAdmin","login","onSuccess","codeResponse","onError","error","console","log","fetch","access_token","headers","Authorization","Accept","then","response","json","data","addUserToDatabase","checkAdminStatus","catch","id","email","exists","googleProfile","userData","CUSTOMER_ID","CUSTOMER_EMAIL","CUSTOMER_NAME","name","method","body","JSON","stringify","logOut","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/trinhduong/chatroom2/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { googleLogout, useGoogleLogin } from '@react-oauth/google';\n\nimport Chatroom from \"./components/Chatroom/Chatroom.tsx\"\nimport AdminPanel from \"./components/AdminPanel/AdminPanel.tsx\"\nimport UserPanel from \"./components/UserPanel/UserPanel.tsx\"\n\n\nfunction App() {\n    const [user, setUser] = useState(null);\n    const [profile, setProfile] = useState(null);\n    const [isAdmin, setAdmin] = useState(false);\n\n    const login = useGoogleLogin({\n        onSuccess: (codeResponse) => setUser(codeResponse),\n        onError: (error) => console.log('Login Failed:', error)\n    });\n\n    useEffect(() => {\n        if (user) {\n            fetch(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n                headers: {\n                    Authorization: `Bearer ${user.access_token}`,\n                    Accept: 'application/json'\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                setProfile(data);\n                addUserToDatabase(data);\n                checkAdminStatus(data)\n            })\n            .catch(error => console.log(error));\n        }\n    }, [user]);\n\n    const checkAdminStatus = (profile) => {\n        const { id, email } = profile;\n        fetch(`http://localhost:443/checkAdmin?customer_id=${id}&customer_email=${email}`)\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            if (data.exists) {\n                setAdmin(true);\n            } else {\n                setAdmin(false);\n            }\n        })\n        .catch(error => {\n            console.error('Failed to check admin status:', error);\n            setAdmin(false);\n        });\n    };\n    \n    \n    const addUserToDatabase = (googleProfile) => {\n        const userData = {\n            CUSTOMER_ID: googleProfile.id, // Assuming CUSTOMER_ID is a string\n            CUSTOMER_EMAIL: googleProfile.email,\n            CUSTOMER_NAME: googleProfile.name\n        };\n\n        fetch('http://localhost:443/setUsers', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        })  \n        .then(response => console.log('User added successfully:', response))\n        .catch(error => console.error('Failed to add user:', error));\n    };\n\n    const logOut = () => {\n        googleLogout();\n        setUser(null);\n        setProfile(null);\n    };\n\n    console.log(isAdmin)\n    return (\n        <div>\n            {profile ? (\n                <div>\n                    <button className=\"border-2 border-red-400 p-2 \"onClick={logOut}>Log out</button>\n\n                    <p>ID: {profile.id}</p>\n                    <p>Name: {profile.name}</p>\n                    <p>Email: {profile.email}</p>\n            \n                    {/* <Chatroom user={profile} isLoggedIn={true} /> */}\n                    {isAdmin ? (\n                        <>\n                            <AdminPanel user = {profile}/>\n                        </>\n                    ) : (\n                        <>\n                            <UserPanel user={profile}/>\n                        </>\n                    )}\n                </div>\n            ) : (\n                <button onClick={() => login()}>Sign in with Google ðŸš€</button>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}