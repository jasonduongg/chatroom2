{"ast":null,"code":"var _jsxFileName = \"/Users/trinhduong/chatroom2/my-react-app/src/components/AdminChatroom/AdminChatroom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Ably from 'ably';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminChatroom({\n  user,\n  isLoggedIn\n}) {\n  _s();\n  const [messages, setMessages] = useState({});\n  const [ablyClient, setAblyClient] = useState(null);\n  const [channel, setChannel] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  const [pollOptions, setPollOptions] = useState({});\n  const bottomOfChat = useRef(null);\n  useEffect(() => {\n    if (bottomOfChat.current) {\n      bottomOfChat.current.scrollIntoView();\n    }\n  }, [messages]);\n  const initializeChat = async () => {\n    if (isLoggedIn && !ablyClient) {\n      try {\n        const response = await fetch('http://localhost:5000/fetchMessages');\n        const fetchedMessages = await response.json();\n        const parsedMessages = fetchedMessages.map(message => {\n          const {\n            uuid,\n            user,\n            text,\n            pollOptions\n          } = message;\n          const poll = pollOptions ? Object.keys(pollOptions).reduce((acc, key) => {\n            acc[key] = pollOptions[key];\n            return acc;\n          }, {}) : {};\n          return {\n            uuid: uuid,\n            username: user,\n            message: text,\n            pollOptions: poll\n          };\n        });\n        setMessages(parsedMessages);\n        const ablyKey = 'gWdAvw.DxcdmQ:WYmbfWlXmbZBC5UeOKWXretPGWjPUCb_F-_x9-JpME4';\n        const client = new Ably.Realtime.Promise({\n          key: ablyKey\n        });\n        const chatChannel = client.channels.get('chat');\n        chatChannel.subscribe(message => {\n          console.log(message);\n          setMessages(prevMessages => {\n            const index = prevMessages.findIndex(msg => msg.uuid === message.data.uuid);\n            if (index !== -1) {\n              const updatedMessages = [...prevMessages];\n              console.log(message.data);\n              updatedMessages[index] = message.data;\n              return updatedMessages;\n            } else {\n              return [...prevMessages, message.data];\n            }\n          });\n        });\n        setAblyClient(client);\n        setChannel(chatChannel);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (isLoggedIn && !ablyClient) {\n      initializeChat();\n    }\n  }, [isLoggedIn]);\n  const sendMessage = async () => {\n    if (channel && newMessage.trim() !== '') {\n      const uuid = uuidv4();\n      let concat = {\n        uuid: uuid,\n        username: user.name,\n        message: newMessage,\n        pollOptions: pollOptions\n      };\n      channel.publish(\"update\", concat);\n      await fetch('http://localhost:5000/sendMessage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          uuid: uuid,\n          user: user.name,\n          text: newMessage.trim(),\n          pollOptions: pollOptions\n        })\n      });\n      setNewMessage('');\n      setPollOptions({});\n    }\n  };\n  const addPollOption = () => {\n    const index = Object.keys(pollOptions).length;\n    setPollOptions(prevOptions => ({\n      ...prevOptions,\n      [index]: {\n        ...prevOptions[index],\n        answer: \"\",\n        votes: 0\n      }\n    }));\n  };\n  const handlePollOptionChange = (index, value) => {\n    setPollOptions(prevOptions => ({\n      ...prevOptions,\n      [index]: {\n        ...prevOptions[index],\n        answer: value,\n        votes: prevOptions[index].votes // Keep the previous votes unchanged\n      }\n    }));\n  };\n  const handleVote = (uuid, voteIndex) => {\n    const apiUrl = `http://localhost:5000/vote/${uuid}/${voteIndex}`;\n    fetch(apiUrl, {\n      method: 'PUT'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to vote');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      const test = {\n        uuid: data.uuid,\n        username: data.user,\n        message: data.text,\n        pollOptions: data.pollOptions\n      };\n      channel.publish(\"vote\", test);\n    }).catch(error => {\n      console.error('Error voting:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-min\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl mb-2\",\n        children: \"Admin Chatroom Prototype\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[300px] w-[500px] overflow-scroll snap-y border-2 border-black mb-2\",\n        children: [Object.entries(messages).map(([index, message]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg pl-2\",\n            children: message.username + \": \" + message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), \" \", Object.keys(message.pollOptions).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full h-full pl-4 pr-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \" Poll Options:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: Object.entries(message.pollOptions).map(([index, option]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-row justify-between mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-row justify-between border-2 border-black w-full pl-2 pr-2 mr-2 inline-flex items-center align-middle\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: index + \") \" + option.answer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: option.votes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"border-2 border-black p-1\",\n                  onClick: () => handleVote(message.uuid, index),\n                  children: \"Vote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomOfChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"border-2 border-black w-full min-h-min\",\n          type: \"text\",\n          value: newMessage,\n          placeholder: \"message Chatroom\",\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Add Poll Options \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-64\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: [Object.entries(pollOptions).map(([index, option]) => /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"border-2 border-black\",\n              value: option.question,\n              placeholder: `Enter Text`,\n              onChange: e => handlePollOptionChange(index, e.target.value) // Update question text for the corresponding index\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 25\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addPollOption,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"border-2 border-black pl-2 pr-2\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminChatroom, \"ax6+WlA5UGAaET2Ju/guLdfse00=\");\n_c = AdminChatroom;\nexport default AdminChatroom;\nvar _c;\n$RefreshReg$(_c, \"AdminChatroom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Ably","v4","uuidv4","jsxDEV","_jsxDEV","AdminChatroom","user","isLoggedIn","_s","messages","setMessages","ablyClient","setAblyClient","channel","setChannel","newMessage","setNewMessage","pollOptions","setPollOptions","bottomOfChat","current","scrollIntoView","initializeChat","response","fetch","fetchedMessages","json","parsedMessages","map","message","uuid","text","poll","Object","keys","reduce","acc","key","username","ablyKey","client","Realtime","Promise","chatChannel","channels","get","subscribe","console","log","prevMessages","index","findIndex","msg","data","updatedMessages","error","sendMessage","trim","concat","name","publish","method","headers","body","JSON","stringify","addPollOption","length","prevOptions","answer","votes","handlePollOptionChange","value","handleVote","voteIndex","apiUrl","then","ok","Error","test","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","option","onClick","ref","type","placeholder","onChange","e","target","question","_c","$RefreshReg$"],"sources":["/Users/trinhduong/chatroom2/my-react-app/src/components/AdminChatroom/AdminChatroom.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Ably from 'ably';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction AdminChatroom({ user, isLoggedIn }) {\n    const [messages, setMessages] = useState({});\n    const [ablyClient, setAblyClient] = useState(null);\n    const [channel, setChannel] = useState(null);\n\n    const [newMessage, setNewMessage] = useState('');\n    const [pollOptions, setPollOptions] = useState({});\n\n    const bottomOfChat = useRef(null);\n\n    useEffect(() => {\n        if (bottomOfChat.current) {\n            bottomOfChat.current.scrollIntoView();\n        }\n    }, [messages]);\n\n    const initializeChat = async () => {\n        if (isLoggedIn && !ablyClient) {\n            try {\n                const response = await fetch('http://localhost:5000/fetchMessages');\n                const fetchedMessages = await response.json();\n                const parsedMessages = fetchedMessages.map(message => {\n                    const { uuid, user, text, pollOptions } = message;\n                    const poll = pollOptions\n                    ? Object.keys(pollOptions).reduce((acc, key) => {\n                        acc[key] = pollOptions[key];\n                        return acc;\n                        }, {})\n                    : {}\n                    return {\n                        uuid: uuid,\n                        username: user,\n                        message: text,\n                        pollOptions: poll\n                    };\n                });                \n                setMessages(parsedMessages);\n                const ablyKey = 'gWdAvw.DxcdmQ:WYmbfWlXmbZBC5UeOKWXretPGWjPUCb_F-_x9-JpME4'\n                const client = new Ably.Realtime.Promise({ key: ablyKey });\n                const chatChannel = client.channels.get('chat');\n                chatChannel.subscribe((message) => {   \n                    console.log(message)\n                    setMessages(prevMessages => {\n                        const index = prevMessages.findIndex(msg => msg.uuid === message.data.uuid);\n                        if (index !== -1) {\n                            const updatedMessages = [...prevMessages];\n                            console.log(message.data)\n                            updatedMessages[index] = message.data;\n                            return updatedMessages;\n                        } else {\n                            return [...prevMessages, message.data];\n                        }\n                    });\n                });\n                \n                setAblyClient(client);\n                setChannel(chatChannel);\n            \n            } catch (error) {\n                console.error('Error fetching messages:', error);\n            }\n        }\n    };\n    \n    useEffect(() => {\n        if (isLoggedIn && !ablyClient) {\n            initializeChat();\n        }\n    }, [isLoggedIn]);\n    \n\n    const sendMessage = async () => {\n        if (channel && newMessage.trim() !== '') {\n            const uuid = uuidv4();\n            let concat = {uuid: uuid, username: user.name, message: newMessage, pollOptions: pollOptions}\n            channel.publish(\"update\", concat);\n            await fetch('http://localhost:5000/sendMessage', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    uuid: uuid,\n                    user: user.name,\n                    text: newMessage.trim(),\n                    pollOptions: pollOptions\n                })\n            });\n            setNewMessage('');\n            setPollOptions({})\n        }\n    };\n\n    const addPollOption = () => {\n        const index = Object.keys(pollOptions).length;\n        setPollOptions(prevOptions => ({\n            ...prevOptions,\n            [index]: { \n                ...prevOptions[index],\n                answer: \"\",\n                votes: 0\n            }\n        }));\n    };\n\n    const handlePollOptionChange = (index, value) => {\n        setPollOptions(prevOptions => ({\n            ...prevOptions,\n            [index]: { \n                ...prevOptions[index],\n                answer: value,\n                votes: prevOptions[index].votes // Keep the previous votes unchanged\n            }\n        }));\n    };\n    const handleVote = (uuid, voteIndex) => {\n        const apiUrl = `http://localhost:5000/vote/${uuid}/${voteIndex}`;\n        fetch(apiUrl, {\n            method: 'PUT',\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to vote');\n            }\n            return response.json();\n        })\n        .then(data => {\n            console.log(data)\n            const test = {\n                uuid: data.uuid,\n                username: data.user,\n                message: data.text,\n                pollOptions: data.pollOptions\n            };\n            channel.publish(\"vote\", test);\n        })\n        .catch(error => {\n            console.error('Error voting:', error);\n        });\n    };\n    \n    \n\n    return (\n        <div className=\"flex flex-row justify-center items-center\">\n            <div className=\"w-min\">\n                <h1 className='text-2xl mb-2'>Admin Chatroom Prototype</h1>\n                <div className='h-[300px] w-[500px] overflow-scroll snap-y border-2 border-black mb-2'>\n\n                {Object.entries(messages).map(([index, message]) => (\n                    <div key={index}>\n                        <p className='text-lg pl-2'>{message.username + \": \" + message.message}</p> {/* Render message text */}\n                        {Object.keys(message.pollOptions).length > 0 && (\n                            <div className='w-full h-full pl-4 pr-4'>\n                                <div className='text-center'>\n                                    <p> Poll Options:</p>\n                                </div>\n                                <ul>\n                                    {Object.entries(message.pollOptions).map(([index, option]) => (\n                                        <div key={index} className='flex flex-row justify-between mb-2'>    \n                                            <div key={index} className=\"flex flex-row justify-between border-2 border-black w-full pl-2 pr-2 mr-2 inline-flex items-center align-middle\">\n                                                <p>{index + \") \" +option.answer}</p>\n                                                <p>{option.votes}</p>\n                                            </div>\n                                            <button className=\"border-2 border-black p-1\" onClick={() => handleVote(message.uuid, index)}>Vote</button>\n                                        </div>\n                                        \n                                    ))}\n                                </ul>\n                            </div>\n                        )}\n\n                    </div>\n                ))}\n\n                    <div ref={bottomOfChat}></div>\n                </div>\n                <div>\n                    <textarea className=\"border-2 border-black w-full min-h-min\" type=\"text\" value={newMessage} placeholder=\"message Chatroom\" onChange={(e) => setNewMessage(e.target.value)} />\n                    <p> Add Poll Options </p>\n                    <div className=\"w-full h-64\">\n                        <div className='flex flex-col'>\n                        {Object.entries(pollOptions).map(([index, option]) => (\n                        <input\n                            key={index}\n                            className=\"border-2 border-black\"\n                            value={option.question} \n                            placeholder={`Enter Text`}\n                            onChange={(e) => handlePollOptionChange(index, e.target.value)} // Update question text for the corresponding index\n                        />\n                         ))}\n                        <button onClick={addPollOption}>+</button>\n                        </div>\n                    </div>\n\n                    <button className=\"border-2 border-black pl-2 pr-2\" onClick={sendMessage}>Send</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AdminChatroom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}