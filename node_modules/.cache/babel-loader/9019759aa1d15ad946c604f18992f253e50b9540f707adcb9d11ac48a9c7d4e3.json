{"ast":null,"code":"var _jsxFileName = \"/Users/trinhduong/chatroom2/my-react-app/src/components/Chatroom/Chatroom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Ably from 'ably';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom({\n  user,\n  isLoggedIn\n}) {\n  _s();\n  const [ablyClient, setAblyClient] = useState(null);\n  const [channel, setChannel] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [newMessage, setNewMessage] = useState('');\n  const bottomOfChat = useRef(null);\n  useEffect(() => {\n    if (bottomOfChat.current) {\n      bottomOfChat.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const initializeChat = async () => {\n    if (isLoggedIn && !ablyClient) {\n      try {\n        // Retrive all previous messages from DB\n        const response = await fetch('http://localhost:443/getMessages');\n        const fetchedMessages = await response.json();\n        const parsedMessages = fetchedMessages.map(message => {\n          const {\n            TIMESTAMP,\n            CUSTOMER_ID,\n            CUSTOMER_NAME,\n            MESSAGE\n          } = message;\n          return {\n            timestamp: TIMESTAMP,\n            customer_id: CUSTOMER_ID,\n            customer_name: CUSTOMER_NAME,\n            message: MESSAGE\n          };\n        });\n        setMessages(parsedMessages);\n\n        // Set up Ably\n        const ablyKey = process.env.REACT_APP_ABLY_KEY;\n        const client = new Ably.Realtime.Promise({\n          key: ablyKey\n        });\n        const chatChannel = client.channels.get('chat');\n\n        // Handles Ably new messages\n        chatChannel.subscribe(message => {\n          setMessages(prevMessages => {\n            const index = prevMessages.findIndex(msg => msg.timestamp === message.data.timestamp);\n            if (index !== -1) {\n              const updatedMessages = [...prevMessages];\n              updatedMessages[index] = message.data;\n              return updatedMessages;\n            } else {\n              return [...prevMessages, message.data];\n            }\n          });\n        });\n        setAblyClient(client);\n        setChannel(chatChannel);\n      } catch (error) {\n        console.error('Error Initializing Chatroom:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    if (isLoggedIn && !ablyClient) {\n      initializeChat();\n    }\n  }, [isLoggedIn]);\n  const sendMessage = async () => {\n    if (channel && newMessage.trim() !== '') {\n      const uuid = uuidv4();\n      const userDataAbly = {\n        timestamp: uuid,\n        customer_name: user.name,\n        customer_id: user.id,\n        message: newMessage\n      };\n      const userDataDB = {\n        TIMESTAMP: uuid,\n        CUSTOMER_NAME: user.name,\n        CUSTOMER_ID: user.id,\n        MESSAGE: newMessage\n      };\n      channel.publish(\"update\", userDataAbly);\n      fetch('http://localhost:443/sendMessage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userDataDB)\n      }).then(response => console.log('Message added', response)).catch(error => console.error('Failed to add message:', error));\n    }\n    setNewMessage(\"\");\n  };\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col bg-[#f5f5f5] rounded-3xl border border-gray-400 border-dashed w-[850px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-[250px] overflow-y-scroll mb-8 justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: Object.entries(messages).map(([index, message]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${user.id === message.customer_id ? 'bg-[#90ee90] text-right justify-end self-end' : 'bg-[#ffffff] text-left justify-start self-start'} \n                                    flex max-w-[80%] p-2 mr-8 ml-8 mb-3 rounded-xl`,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `large-xl leading-normal break-all mr-4 ml-4`,\n              children: \"[\" + message.timestamp.slice(0, 4) + \"] \" + message.customer_name + \": \" + message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, `${message.timestamp}-${message.customer_id}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: bottomOfChat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row space-x-2 w-full pb-10 pr-10 pl-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"border-2 border-black w-[80%]\",\n            type: \"text\",\n            value: newMessage,\n            placeholder: \"Message Chatroom\",\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"border-2 border-black w-[20%] pl-2 pr-2\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatroom, \"T1x+1jlpHhZJzMuXOALsoswYBaU=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Ably","v4","uuidv4","jsxDEV","_jsxDEV","Chatroom","user","isLoggedIn","_s","ablyClient","setAblyClient","channel","setChannel","messages","setMessages","newMessage","setNewMessage","bottomOfChat","current","scrollIntoView","behavior","initializeChat","response","fetch","fetchedMessages","json","parsedMessages","map","message","TIMESTAMP","CUSTOMER_ID","CUSTOMER_NAME","MESSAGE","timestamp","customer_id","customer_name","ablyKey","process","env","REACT_APP_ABLY_KEY","client","Realtime","Promise","key","chatChannel","channels","get","subscribe","prevMessages","index","findIndex","msg","data","updatedMessages","error","console","sendMessage","trim","uuid","userDataAbly","name","id","userDataDB","publish","method","headers","body","JSON","stringify","then","log","catch","className","children","Object","entries","slice","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/trinhduong/chatroom2/my-react-app/src/components/Chatroom/Chatroom.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Ably from 'ably';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Chatroom({ user, isLoggedIn }) {\n\n    const [ablyClient, setAblyClient] = useState(null);\n    const [channel, setChannel] = useState(null);\n\n    const [messages, setMessages] = useState({});\n    const [newMessage, setNewMessage] = useState('');\n\n    const bottomOfChat = useRef(null);\n\n    useEffect(() => {\n        if (bottomOfChat.current) {\n            bottomOfChat.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [messages]);\n\n    const initializeChat = async () => {\n        if (isLoggedIn && !ablyClient) {\n            try {\n\n                // Retrive all previous messages from DB\n                const response = await fetch('http://localhost:443/getMessages');\n                const fetchedMessages = await response.json();\n                const parsedMessages = fetchedMessages.map(message => {\n                    const { TIMESTAMP, CUSTOMER_ID, CUSTOMER_NAME, MESSAGE } = message;\n                    return {\n                        timestamp: TIMESTAMP,\n                        customer_id: CUSTOMER_ID,\n                        customer_name: CUSTOMER_NAME,\n                        message: MESSAGE\n\n                    };\n                });                \n                setMessages(parsedMessages);\n\n                // Set up Ably\n                const ablyKey = process.env.REACT_APP_ABLY_KEY\n                const client = new Ably.Realtime.Promise({ key: ablyKey });\n                const chatChannel = client.channels.get('chat');\n\n                // Handles Ably new messages\n                chatChannel.subscribe((message) => {   \n                    setMessages(prevMessages => {\n                        const index = prevMessages.findIndex(msg => msg.timestamp === message.data.timestamp);\n                        if (index !== -1) {\n                            const updatedMessages = [...prevMessages];\n                            updatedMessages[index] = message.data;\n                            return updatedMessages;\n                        } else {\n                            return [...prevMessages, message.data];\n                        }\n                    });\n                });\n                setAblyClient(client);\n                setChannel(chatChannel);\n            \n            } catch (error) {\n                console.error('Error Initializing Chatroom:', error);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (isLoggedIn && !ablyClient) {\n            initializeChat();\n        }\n    }, [isLoggedIn]);\n\n\n    const sendMessage = async () => {\n        if (channel && newMessage.trim() !== '') {\n            const uuid = uuidv4();\n            const userDataAbly = {\n                timestamp: uuid,\n                customer_name: user.name,\n                customer_id: user.id,\n                message: newMessage\n            }; \n            const userDataDB = {\n                TIMESTAMP: uuid,\n                CUSTOMER_NAME: user.name,\n                CUSTOMER_ID: user.id,\n                MESSAGE: newMessage\n            }; \n            channel.publish(\"update\", userDataAbly);\n            fetch('http://localhost:443/sendMessage', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(userDataDB)\n            })  \n            .then(response => console.log('Message added', response))\n            .catch(error => console.error('Failed to add message:', error));\n        }\n        setNewMessage(\"\")\n    };\n\n    console.log(messages)\n\n    return (\n        <div className='flex flex-col justify-center items-center'>\n                <div className=\"flex flex-col bg-[#f5f5f5] rounded-3xl border border-gray-400 border-dashed w-[850px]\">\n                    <div className='h-[250px] overflow-y-scroll mb-8 justify-center'>\n                        <div className='flex flex-col'>\n                        {Object.entries(messages).map(([index, message]) => (\n                            <div key={`${message.timestamp}-${message.customer_id}`}\n                                className={`${\n                                    user.id === message.customer_id \n                                    ? 'bg-[#90ee90] text-right justify-end self-end' \n                                    : 'bg-[#ffffff] text-left justify-start self-start'} \n                                    flex max-w-[80%] p-2 mr-8 ml-8 mb-3 rounded-xl`}\n                            >\n                                <p className={`large-xl leading-normal break-all mr-4 ml-4`}\n                                    >{\"[\" + message.timestamp.slice(0,4) + \"] \" + message.customer_name + \": \" + message.message}</p>\n                            </div>\n                        ))}\n    \n                        </div>\n                        <div ref={bottomOfChat}></div>\n                    </div>\n    \n                    <div className='flex justify-center'>\n                        <div className='flex flex-row space-x-2 w-full pb-10 pr-10 pl-10'>\n                            <textarea className=\"border-2 border-black w-[80%]\" type=\"text\" value={newMessage} placeholder=\"Message Chatroom\" onChange={(e) => setNewMessage(e.target.value)} />\n                            <button className=\"border-2 border-black w-[20%] pl-2 pr-2\" onClick={sendMessage}>Send</button>\n                        </div>\n                    </div>\n                </div>\n        </div>\n    );\n    \n}\n\nexport default Chatroom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}