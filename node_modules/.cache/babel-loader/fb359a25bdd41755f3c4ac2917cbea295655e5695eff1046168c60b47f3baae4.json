{"ast":null,"code":"var _jsxFileName = \"/Users/trinhduong/chatroom2/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { googleLogout, useGoogleLogin } from '@react-oauth/google';\nimport Chatroom from \"./components/Chatroom/Chatroom.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const login = useGoogleLogin({\n    onSuccess: codeResponse => setUser(codeResponse),\n    onError: error => console.log('Login Failed:', error)\n  });\n  useEffect(() => {\n    if (user) {\n      fetch(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n          Accept: 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        setProfile(data);\n        addUserToDatabase(data); // Call the function to add user to database\n      }).catch(error => console.log(error));\n    }\n  }, [user]);\n  const addUserToDatabase = googleProfile => {\n    const userData = {\n      CUSTOMER_ID: googleProfile.id.toString(),\n      // Assuming CUSTOMER_ID is a string\n      CUSTOMER_EMAIL: googleProfile.email,\n      CUSTOMER_NAME: googleProfile.name\n    };\n    fetch('https://localhost:3443/setUsers', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userData)\n    }).then(response => console.log('User added successfully:', response)).catch(error => console.error('Failed to add user:', error));\n  };\n  const logOut = () => {\n    googleLogout();\n    setUser(null);\n    setProfile(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", profile.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.picture,\n        alt: \"user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email Address: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logOut,\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Chatroom, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => login(),\n      children: \"Sign in with Google \\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"AOyUI7Nt9SXji13Vnbi1q3a/r3A=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","googleLogout","useGoogleLogin","Chatroom","jsxDEV","_jsxDEV","App","_s","user","setUser","profile","setProfile","login","onSuccess","codeResponse","onError","error","console","log","fetch","access_token","headers","Authorization","Accept","then","response","json","data","addUserToDatabase","catch","googleProfile","userData","CUSTOMER_ID","id","toString","CUSTOMER_EMAIL","email","CUSTOMER_NAME","name","method","body","JSON","stringify","logOut","children","fileName","_jsxFileName","lineNumber","columnNumber","src","picture","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/trinhduong/chatroom2/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { googleLogout, useGoogleLogin } from '@react-oauth/google';\n\nimport Chatroom from \"./components/Chatroom/Chatroom.tsx\"\n\nfunction App() {\n    const [user, setUser] = useState(null);\n    const [profile, setProfile] = useState(null);\n\n    const login = useGoogleLogin({\n        onSuccess: (codeResponse) => setUser(codeResponse),\n        onError: (error) => console.log('Login Failed:', error)\n    });\n\n    useEffect(() => {\n        if (user) {\n            fetch(`https://www.googleapis.com/oauth2/v1/userinfo?access_token=${user.access_token}`, {\n                headers: {\n                    Authorization: `Bearer ${user.access_token}`,\n                    Accept: 'application/json'\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                setProfile(data);\n                addUserToDatabase(data); // Call the function to add user to database\n            })\n            .catch(error => console.log(error));\n        }\n    }, [user]);\n\n    const addUserToDatabase = (googleProfile) => {\n        const userData = {\n            CUSTOMER_ID: googleProfile.id.toString(), // Assuming CUSTOMER_ID is a string\n            CUSTOMER_EMAIL: googleProfile.email,\n            CUSTOMER_NAME: googleProfile.name\n        };\n\n        fetch('https://localhost:3443/setUsers', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(userData)\n        })\n        .then(response => console.log('User added successfully:', response))\n        .catch(error => console.error('Failed to add user:', error));\n    };\n\n    const logOut = () => {\n        googleLogout();\n        setUser(null);\n        setProfile(null);\n    };\n\n    return (\n        <div>\n            <h2>React Google Login</h2>\n            {profile ? (\n                <div>\n                    <p>ID: {profile.id}</p>\n                    <img src={profile.picture} alt=\"user\" />\n                    <h3>User Logged in</h3>\n                    <p>Name: {profile.name}</p>\n                    <p>Email Address: {profile.email}</p>\n                    <button onClick={logOut}>Log out</button>\n                    <Chatroom />\n                </div>\n            ) : (\n                <button onClick={() => login()}>Sign in with Google ðŸš€</button>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}