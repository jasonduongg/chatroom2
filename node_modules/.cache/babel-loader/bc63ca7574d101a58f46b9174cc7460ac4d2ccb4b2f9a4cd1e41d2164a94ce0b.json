{"ast":null,"code":"var _jsxFileName = \"/Users/trinhduong/chatroom2/my-react-app/src/components/AdminPanel/AdminPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel({\n  user\n}) {\n  _s();\n  const [statusMessage, setStatusMessage] = useState('');\n  const createNewChatroom = async () => {\n    const roomId = uuidv4(); // Generate a new room ID using UUID\n\n    try {\n      const response = await fetch(`http://localhost:443/createRoom`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          roomId\n        })\n      });\n      if (response.ok) {\n        const adminResponse = await fetch('http://localhost:443/updateAdmins', {\n          // Replace with your actual endpoint\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            customerId: user.id,\n            roomId: roomId\n          })\n        });\n        if (adminResponse.ok) {\n          const chatroomResponse = await fetch('http://localhost:443/addChatroom', {\n            // Replace with your actual endpoint\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              roomId\n            })\n          });\n          if (chatroomResponse.ok) {\n            setStatusMessage('New chatroom created and added to both admins and chatrooms tables.');\n          } else {\n            setStatusMessage('Failed to add chatroom to chatrooms table.');\n          }\n        } else {\n          setStatusMessage('Failed to update admins table.');\n        }\n      } else {\n        setStatusMessage('Failed to create new chatroom.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setStatusMessage(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"ADMIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-64 w-96 bg-red-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewChatroom,\n        children: \"Create new Chatroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-4\",\n        children: statusMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"znaw+wgxB6f/quJtF1u1uW9YfPk=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","v4","uuidv4","jsxDEV","_jsxDEV","AdminPanel","user","_s","statusMessage","setStatusMessage","createNewChatroom","roomId","response","fetch","method","headers","body","JSON","stringify","ok","adminResponse","customerId","id","chatroomResponse","error","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/trinhduong/chatroom2/my-react-app/src/components/AdminPanel/AdminPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction AdminPanel({ user }) {\n    const [statusMessage, setStatusMessage] = useState('');\n\n    const createNewChatroom = async () => {\n        const roomId = uuidv4(); // Generate a new room ID using UUID\n\n        try {\n            const response = await fetch(`http://localhost:443/createRoom`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ roomId })\n            });\n\n            if (response.ok) {\n                const adminResponse = await fetch('http://localhost:443/updateAdmins', { // Replace with your actual endpoint\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        customerId: user.id,\n                        roomId: roomId\n                    })\n                });\n\n                if (adminResponse.ok) {\n                    const chatroomResponse = await fetch('http://localhost:443/addChatroom', { // Replace with your actual endpoint\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({ roomId })\n                    });\n\n                    if (chatroomResponse.ok) {\n                        setStatusMessage('New chatroom created and added to both admins and chatrooms tables.');\n                    } else {\n                        setStatusMessage('Failed to add chatroom to chatrooms table.');\n                    }\n                } else {\n                    setStatusMessage('Failed to update admins table.');\n                }\n            } else {\n                setStatusMessage('Failed to create new chatroom.');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            setStatusMessage(`Error: ${error.message}`);\n        }\n    };\n\n    return (\n        <div className=\"flex flex-col items-center\">\n            <span>ADMIN</span>\n            <div className=\"h-64 w-96 bg-red-200\">\n                <button onClick={createNewChatroom}>Create new Chatroom</button>\n                {statusMessage && <p className=\"text-red-500 mt-4\">{statusMessage}</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default AdminPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}