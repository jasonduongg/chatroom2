{"ast":null,"code":"var _jsxFileName = \"/Users/trinhduong/chatroom2/my-react-app/src/components/AdminPanel/AdminPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateRoomForm({\n  user\n}) {\n  _s();\n  const [roomId, setRoomId] = useState(''); // This would typically be generated on the server or immediately before submitting.\n  const [roomName, setRoomName] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Normally, roomId would be generated server-side or just before submission\n    // Here, you might want to generate it if not done elsewhere\n    const response = await fetch('http://localhost:443/createRoom', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        roomId: roomId,\n        // Assuming roomId is generated client-side for demonstration; typically not recommended\n        customerId: user.id,\n        // User ID from props\n        roomName: roomName\n      })\n    });\n    if (response.ok) {\n      setStatusMessage('Room created successfully!');\n    } else {\n      const errorText = await response.text();\n      setStatusMessage(`Failed to create room: ${errorText}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: roomName,\n        onChange: e => setRoomName(e.target.value),\n        placeholder: \"Room Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateRoomForm, \"wwWy04V6ERGEhSEs6yC0RmBk914=\");\n_c = CreateRoomForm;\nexport default CreateRoomForm;\nvar _c;\n$RefreshReg$(_c, \"CreateRoomForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateRoomForm","user","_s","roomId","setRoomId","roomName","setRoomName","statusMessage","setStatusMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","customerId","id","ok","errorText","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/trinhduong/chatroom2/my-react-app/src/components/AdminPanel/AdminPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction CreateRoomForm({ user }) {\n    const [roomId, setRoomId] = useState('');  // This would typically be generated on the server or immediately before submitting.\n    const [roomName, setRoomName] = useState('');\n    const [statusMessage, setStatusMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Normally, roomId would be generated server-side or just before submission\n        // Here, you might want to generate it if not done elsewhere\n        const response = await fetch('http://localhost:443/createRoom', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                roomId: roomId,  // Assuming roomId is generated client-side for demonstration; typically not recommended\n                customerId: user.id,  // User ID from props\n                roomName: roomName,\n            })\n        });\n\n        if (response.ok) {\n            setStatusMessage('Room created successfully!');\n        } else {\n            const errorText = await response.text();\n            setStatusMessage(`Failed to create room: ${errorText}`);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Create Room</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    value={roomName}\n                    onChange={e => setRoomName(e.target.value)}\n                    placeholder=\"Room Name\"\n                    required\n                />\n                <button type=\"submit\">Create Room</button>\n            </form>\n            {statusMessage && <p>{statusMessage}</p>}\n        </div>\n    );\n}\n\nexport default CreateRoomForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBf,MAAM,EAAEA,MAAM;QAAG;QACjBgB,UAAU,EAAElB,IAAI,CAACmB,EAAE;QAAG;QACtBf,QAAQ,EAAEA;MACd,CAAC;IACL,CAAC,CAAC;IAEF,IAAIO,QAAQ,CAACS,EAAE,EAAE;MACbb,gBAAgB,CAAC,4BAA4B,CAAC;IAClD,CAAC,MAAM;MACH,MAAMc,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACvCf,gBAAgB,CAAE,0BAAyBc,SAAU,EAAC,CAAC;IAC3D;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB7B,OAAA;MAAM8B,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBACzBzB,OAAA;QACI+B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,QAAS;QAChB2B,QAAQ,EAAEtB,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;QAC3CG,WAAW,EAAC,WAAW;QACvBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACF7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACNrB,aAAa,iBAAIR,OAAA;MAAAyB,QAAA,EAAIjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd;AAAC1B,EAAA,CA9CQF,cAAc;AAAAoC,EAAA,GAAdpC,cAAc;AAgDvB,eAAeA,cAAc;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}