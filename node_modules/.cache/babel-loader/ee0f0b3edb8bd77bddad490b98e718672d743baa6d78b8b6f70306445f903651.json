{"ast":null,"code":"var _jsxFileName = \"/Users/trinhduong/chatroom2/my-react-app/src/components/DynamicChatroom/DynamicChatroom.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ablyClient } from '../../ably.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatroom({\n  user,\n  isLoggedIn,\n  chatroomId,\n  chatroomName\n}) {\n  _s();\n  const [channel, setChannel] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const bottomOfChat = useRef(null);\n  useEffect(() => {\n    if (bottomOfChat.current) {\n      bottomOfChat.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n  const cleanupChat = () => {\n    if (channel) {\n      channel.unsubscribe();\n      channel.detach(); // Ensure to detach the channel as well\n      setChannel(null);\n    }\n    setMessages([]);\n  };\n  const initializeChat = () => {\n    if (isLoggedIn && chatroomId) {\n      cleanupChat(); // Clean up previous chat data and subscriptions\n      const chatChannel = ablyClient.channels.get(chatroomId);\n      chatChannel.subscribe(\"update\", message => {\n        setMessages(prevMessages => [...prevMessages, message.data].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp))); // Sort messages on update\n      });\n      setChannel(chatChannel);\n    }\n  };\n  useEffect(() => {\n    if (isLoggedIn && chatroomId) {\n      initializeChat();\n    }\n    return () => cleanupChat(); // Cleanup on component unmount or when the chatroomId changes\n  }, [isLoggedIn, chatroomId]);\n  const handleEnter = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      sendMessage();\n    }\n  };\n  const sendMessage = async () => {\n    if (channel && newMessage.trim() !== '') {\n      const timestamp = new Date().toISOString();\n      const messageData = {\n        TIMESTAMP: timestamp,\n        CUSTOMER_NAME: user.name,\n        CUSTOMER_ID: user.id,\n        MESSAGE: newMessage,\n        ROOM_ID: chatroomId\n      };\n      console.log(messageData);\n      channel.publish(\"update\", messageData);\n      fetch('http://localhost:443/sendMessage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(messageData)\n      }).then(response => console.log('Message added', response)).catch(error => console.error('Failed to add message:', error));\n      setNewMessage(\"\");\n    }\n  };\n  console.log(messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-min\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl whitespace-nowrap p-4 pl-0\",\n          children: chatroomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col bg-[#f5f5f5] rounded-3xl border border-gray-400 border-dashed w-[850px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-[250px] overflow-y-scroll mb-8 justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col\",\n            children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${user.id === message.CUSTOMER_ID ? 'bg-[#90ee90] text-right justify-end self-end' : 'bg-[#ffffff] text-left justify-start self-start'} flex max-w-[80%] p-2 mr-8 ml-8 mb-3 rounded-xl`,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"large-xl leading-normal break-all mr-4 ml-4\",\n                children: \"[\" + message.TIMESTAMP.slice(11, 19) + \"] \" + message.CUSTOMER_NAME + \": \" + message.MESSAGE\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)\n            }, `${message.TIMESTAMP}-${message.CUSTOMER_ID}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: bottomOfChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row space-x-2 w-full pb-10 pr-10 pl-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"border-[1px] border-black w-[80%] rounded-3xl p-1 pl-4\",\n              type: \"text\",\n              value: newMessage,\n              placeholder: \"Message... \" + chatroomName,\n              onKeyDown: handleEnter,\n              onChange: e => setNewMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"border-[1px] border-black w-[20%] rounded-3xl pl-2 pr-2 hover:border-green-300 hover:bg-green-300 duration-200\",\n              onClick: sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatroom, \"WO7zQ4MngXOsQQdhAoVPN2ZiutI=\");\n_c = Chatroom;\nexport default Chatroom;\nvar _c;\n$RefreshReg$(_c, \"Chatroom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ablyClient","jsxDEV","_jsxDEV","Chatroom","user","isLoggedIn","chatroomId","chatroomName","_s","channel","setChannel","messages","setMessages","newMessage","setNewMessage","bottomOfChat","current","scrollIntoView","behavior","cleanupChat","unsubscribe","detach","initializeChat","chatChannel","channels","get","subscribe","message","prevMessages","data","sort","a","b","Date","timestamp","handleEnter","event","key","shiftKey","preventDefault","sendMessage","trim","toISOString","messageData","TIMESTAMP","CUSTOMER_NAME","name","CUSTOMER_ID","id","MESSAGE","ROOM_ID","console","log","publish","fetch","method","headers","body","JSON","stringify","then","response","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","slice","ref","type","value","placeholder","onKeyDown","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/trinhduong/chatroom2/my-react-app/src/components/DynamicChatroom/DynamicChatroom.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { ablyClient } from '../../ably.jsx'\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Chatroom({ user, isLoggedIn, chatroomId, chatroomName }) {\n    const [channel, setChannel] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState('');\n    const bottomOfChat = useRef(null);\n\n    useEffect(() => {\n        if (bottomOfChat.current) {\n            bottomOfChat.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, [messages]);\n\n    const cleanupChat = () => {\n        if (channel) {\n            channel.unsubscribe();\n            channel.detach();  // Ensure to detach the channel as well\n            setChannel(null);\n        }\n        setMessages([]);\n    };\n\n    const initializeChat = () => {\n        if (isLoggedIn && chatroomId) {\n            cleanupChat(); // Clean up previous chat data and subscriptions\n            const chatChannel = ablyClient.channels.get(chatroomId);\n\n            chatChannel.subscribe(\"update\", (message) => {\n                setMessages(prevMessages => [...prevMessages, message.data]\n                  .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp))); // Sort messages on update\n            });\n\n            setChannel(chatChannel);\n        }\n    };\n\n    useEffect(() => {\n        if (isLoggedIn && chatroomId) {\n            initializeChat();\n        }\n\n        return () => cleanupChat(); // Cleanup on component unmount or when the chatroomId changes\n    }, [isLoggedIn, chatroomId]);\n\n    const handleEnter = (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n          event.preventDefault();\n          sendMessage();\n        }\n    };\n\n    const sendMessage = async () => {\n        if (channel && newMessage.trim() !== '') {\n            const timestamp = new Date().toISOString();\n            const messageData = {\n                TIMESTAMP: timestamp,\n                CUSTOMER_NAME: user.name,\n                CUSTOMER_ID: user.id,\n                MESSAGE: newMessage,\n                ROOM_ID: chatroomId\n            };\n            console.log(messageData)\n            channel.publish(\"update\", messageData);\n            fetch('http://localhost:443/sendMessage', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(messageData)\n            })\n            .then(response => console.log('Message added', response))\n            .catch(error => console.error('Failed to add message:', error));\n            setNewMessage(\"\");\n        }\n    };\n\n    console.log(messages)\n    return (\n        <div className=\"flex flex-col items-center\">\n            <div className='flex flex-col items-left'>\n                <div className='w-min'>\n                    <h1 className='text-3xl whitespace-nowrap p-4 pl-0'>{chatroomName}</h1>\n                </div>\n                <div className=\"flex flex-col bg-[#f5f5f5] rounded-3xl border border-gray-400 border-dashed w-[850px]\">\n                    <div className='h-[250px] overflow-y-scroll mb-8 justify-center'>\n                        <div className='flex flex-col'>\n                            {messages.map((message, index) => (\n                                <div key={`${message.TIMESTAMP}-${message.CUSTOMER_ID}`}\n                                    className={`${user.id === message.CUSTOMER_ID ? 'bg-[#90ee90] text-right justify-end self-end' : 'bg-[#ffffff] text-left justify-start self-start'} flex max-w-[80%] p-2 mr-8 ml-8 mb-3 rounded-xl`}>\n                                    <p className=\"large-xl leading-normal break-all mr-4 ml-4\">\n                                        {\"[\" + message.TIMESTAMP.slice(11,19) + \"] \" + message.CUSTOMER_NAME + \": \" + message.MESSAGE}\n                                    </p>\n                                </div>\n                            ))}\n                        </div>\n                        <div ref={bottomOfChat}></div>\n                    </div>\n                    <div className='flex justify-center'>\n                        <div className='flex flex-row space-x-2 w-full pb-10 pr-10 pl-10'>\n                            <input className=\"border-[1px] border-black w-[80%] rounded-3xl p-1 pl-4\" type=\"text\" value={newMessage} placeholder={\"Message... \" + chatroomName} onKeyDown={handleEnter} onChange={(e) => setNewMessage(e.target.value)} />\n                            <button className=\"border-[1px] border-black w-[20%] rounded-3xl pl-2 pr-2 hover:border-green-300 hover:bg-green-300 duration-200\" onClick={sendMessage}>Send</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chatroom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}